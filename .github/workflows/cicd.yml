name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} \
            --build-arg ADMIN_UID=${{ secrets.ADMIN_UID }} \
            --build-arg FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --build-arg FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }} \
            --build-arg FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }} \
            --build-arg ALLOWED_ORIGIN=${{ secrets.ALLOWED_ORIGIN }} \
            -t xkolumber/strop-image:latest \
            --push .

      - name: Push Docker image to Docker Hub
        run: |
          docker push xkolumber/strop-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Upload SSH private key to GitHub Secrets
        run: echo "$SSH_PRIVATE_KEY" > private_key.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set permissions for SSH key
        run: chmod 600 private_key.pem

      - name: Deploy Docker container to VPS
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no root@173.249.47.149 << EOF
            # Pull the latest Docker image from Docker Hub
            docker pull xkolumber/strop-image:latest
            
            # Stop and remove any existing container
            docker stop strop || true
            docker rm strop || true
            
            # Run the new container
            docker run -d --name strop -p 3000:3000 --env-file /root/.env.local xkolumber/strop-image:latest
            
          EOF
