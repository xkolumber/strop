name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set short SHA as version tag
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} \
            --build-arg ADMIN_UID=${{ secrets.ADMIN_UID }} \
            --build-arg FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --build-arg FIREBASE_PRIVATE_KEY="${{ secrets.FIREBASE_PRIVATE_KEY }}" \
            --build-arg FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }} \
            --build-arg ALLOWED_ORIGIN=${{ secrets.ALLOWED_ORIGIN }} \
            -t xkolumber/strop-image:${{ steps.vars.outputs.sha_short }} \
            -t xkolumber/strop-image:latest \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Upload SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy Docker container to VPS
        run: |
          TAG=${{ needs.build.outputs.sha_short }}

          ssh -i private_key.pem -o ServerAliveInterval=60 -o StrictHostKeyChecking=no root@173.249.47.149 << EOF
            echo "⏬ Pulling Docker image..."
            docker pull xkolumber/strop-image:$TAG || {
              echo "❌ Docker image not found. Deployment aborted."
              exit 1
            }

            echo "🛑 Stopping old container if exists..."
            docker stop strop || true
            docker rm strop || true

            echo "🚀 Starting new container..."
            docker run -d --name strop --restart=always -p 3000:3000 --cpus="4.0" \
              -e RESEND_API_KEY='${{ secrets.RESEND_API_KEY }}' \
              -e ADMIN_UID='${{ secrets.ADMIN_UID }}' \
              -e FIREBASE_PROJECT_ID='${{ secrets.FIREBASE_PROJECT_ID }}' \
              -e FIREBASE_PRIVATE_KEY='${{ secrets.FIREBASE_PRIVATE_KEY }}' \
              -e FIREBASE_CLIENT_EMAIL='${{ secrets.FIREBASE_CLIENT_EMAIL }}' \
              -e ALLOWED_ORIGIN='${{ secrets.ALLOWED_ORIGIN }}' \
              xkolumber/strop-image:$TAG || {
                echo "❌ Failed to start container. Aborting."
                exit 1
              }

            echo "🧹 Cleaning up..."
            docker image prune -f
          EOF
